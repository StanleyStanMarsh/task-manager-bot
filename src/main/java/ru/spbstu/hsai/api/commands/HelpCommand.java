package ru.spbstu.hsai.api.commands;

import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.User;
import reactor.core.publisher.Mono;
import ru.spbstu.hsai.api.events.UpdateReceivedEvent;
import ru.spbstu.hsai.infrastructure.integration.telegram.TelegramSenderService;

@Component
public class HelpCommand implements TelegramCommand {

    private final TelegramSenderService sender;

    public HelpCommand(TelegramSenderService sender) {
        this.sender = sender;
    }

    @Override
    public boolean supports(String command) {
        return "/help".equalsIgnoreCase(command);
    }

    @EventListener(condition = "@telegramCommandsExtract.checkCommand(#a0.update, '/help')")
    public void handle(UpdateReceivedEvent event) {
        Message message = event.getUpdate().getMessage();
        User user = message.getFrom();

        // –°–æ–∑–¥–∞–µ–º —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π SendMessage
        Mono<SendMessage> sendMessageMono = Mono.just(SendMessage.builder()
                .chatId(user.getId())
                .text(
                        """
                        üìã–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
                        üéØ*–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏*
                        /newtask - —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É;
                        /updatetask <ID> - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É;
                        /deletetask <ID> - —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É;
                        /newrepeatingtask - —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É;
                        üò±*–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á*
                        /mytasks - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á;
                        /today - –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á –Ω–∞ —Å–µ–≥–æ–¥–Ω—è;
                        /week - –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é;
                        /date <–¥–¥.–º–º.–≥–≥–≥–≥> - –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É;
                        /completed - –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á;
                        üí°*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*
                        /status - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ë–æ—Ç–∞;
                        /authors - –æ–± –∞–≤—Ç–æ—Ä–∞—Ö
                        """
                )
                .build());

        // –†–µ–∞–∫—Ç–∏–≤–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        sendMessageMono
                .flatMap(sm -> Mono.fromCompletionStage(sender.sendAsync(sm)))
                .subscribe(); // Fire-and-forget
    }
}