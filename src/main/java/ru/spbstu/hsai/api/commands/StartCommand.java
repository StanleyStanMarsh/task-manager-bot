package ru.spbstu.hsai.api.commands;

import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.User;
import ru.spbstu.hsai.api.events.UpdateReceivedEvent;
import ru.spbstu.hsai.infrastructure.integration.telegram.TelegramSenderService;

@Component
public class StartCommand implements TelegramCommand {

    private final TelegramSenderService sender;

    public StartCommand(TelegramSenderService sender) {
        this.sender = sender;
    }

    @Override
    public boolean supports(String command) {
        return "/start".equalsIgnoreCase(command);
    }

    @EventListener(condition = "@telegramCommandsExtract.checkCommand(#a0.update, '/start')")
    public void handle(UpdateReceivedEvent event) {
        Message message = event.getUpdate().getMessage();
        User user = message.getFrom();
        SendMessage sm = SendMessage.builder()
                .chatId(user.getId())
                .text(String.format(
                                """
                                üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %s! üéâ
                                –≠—Ç–æ—Ç –ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∞–º–∏ –∏ –Ω–µ –∑–∞–±—ã–≤–∞—Ç—å –æ –Ω–∏—Ö!
                                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥.
                                """,
                        user.getUserName()
                ))
                .build();
        sender.send(sm);
        // TODO —Å–¥–µ–ª–∞—Ç—å –ª–æ–≥–∏–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥
    }
}
